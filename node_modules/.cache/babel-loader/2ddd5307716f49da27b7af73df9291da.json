{"ast":null,"code":"var _jsxFileName = \"/Users/gaga/clarity/src/components/NodeDialog.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Dialog, TextField } from \"@material-ui/core\";\nimport { DialogTitle, DialogContent, DialogActions } from \"./Dialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NodeDialog = ({\n  open,\n  title,\n  label,\n  onClose,\n  onOk\n}) => {\n  _s();\n\n  const [nodeLabel, setNodeLabel] = useState(label);\n  useEffect(() => {\n    setNodeLabel(label);\n  }, [label]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullWidth: true,\n    maxWidth: \"sm\",\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: onClose,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        fullWidth: true,\n        id: \"label\",\n        label: \"Label\",\n        value: nodeLabel,\n        variant: \"outlined\",\n        onChange: e => {\n          setNodeLabel(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        autoFocus: true,\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: onOk(nodeLabel),\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NodeDialog, \"d/AdLBlSH0PnUbFoK4Bm7pDb+2g=\");\n\n_c = NodeDialog;\nexport default NodeDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NodeDialog\");","map":{"version":3,"sources":["/Users/gaga/clarity/src/components/NodeDialog.tsx"],"names":["React","useState","useEffect","Button","Dialog","TextField","DialogTitle","DialogContent","DialogActions","NodeDialog","open","title","label","onClose","onOk","nodeLabel","setNodeLabel","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,QAA0C,mBAA1C;AAEA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,QAA0D,UAA1D;;;AAUA,MAAMC,UAAkC,GAAG,CAAC;AAC1CC,EAAAA,IAD0C;AAE1CC,EAAAA,KAF0C;AAG1CC,EAAAA,KAH0C;AAI1CC,EAAAA,OAJ0C;AAK1CC,EAAAA;AAL0C,CAAD,KAMrC;AAAA;;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAACW,KAAD,CAA1C;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAACJ,KAAD,CAAZ;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,QAAQ,EAAC,IAFX;AAGE,uBAAgB,yBAHlB;AAIE,IAAA,IAAI,EAAEF,IAJR;AAAA,4BAME,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,yBAAhB;AAA0C,MAAA,OAAO,EAAEG,OAAnD;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,aAAD;AAAe,MAAA,QAAQ,MAAvB;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,KAAK,EAAC,OAJR;AAKE,QAAA,KAAK,EAAEI,SALT;AAME,QAAA,OAAO,EAAC,UANV;AAOE,QAAA,QAAQ,EAAGE,CAAD,IAAO;AACfD,UAAAA,YAAY,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD;AATH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAsBE,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAEL,IAAI,CAACC,SAAD,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAhDD;;GAAMN,U;;KAAAA,U;AAkDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Dialog, TextField } from \"@material-ui/core\";\n\nimport { DialogTitle, DialogContent, DialogActions } from \"./Dialog\";\n\ntype IDialogProps = {\n  open: boolean;\n  title?: string;\n  label?: string;\n  onClose: Function;\n  onOk: Function;\n};\n\nconst NodeDialog: React.FC<IDialogProps> = ({\n  open,\n  title,\n  label,\n  onClose,\n  onOk,\n}) => {\n  const [nodeLabel, setNodeLabel] = useState(label);\n\n  useEffect(() => {\n    setNodeLabel(label);\n  }, [label]);\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"sm\"\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\n        {title}\n      </DialogTitle>\n      <DialogContent dividers>\n        <TextField\n          autoFocus\n          fullWidth\n          id=\"label\"\n          label=\"Label\"\n          value={nodeLabel}\n          variant=\"outlined\"\n          onChange={(e) => {\n            setNodeLabel(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={onOk(nodeLabel)}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default NodeDialog;\n"]},"metadata":{},"sourceType":"module"}